import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'

    id "org.openapi.generator" version "6.6.0"
    id 'project-report'
}

group = 'com.github.dhslrl321'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // openapi generator 적용을 위한 정보
    implementation('org.openapitools:openapi-generator-gradle-plugin:7.1.0') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

    // generation 에 필요한 의존성 정보들
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.19'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
    useJUnitPlatform()
}

openApiValidate { // task 1. validation
    inputSpec.set("$projectDir/src/api-spec/spec/api-spec.yaml")
    recommend.set(true)
}

openApiGenerate { // task 2. generate
    generatorName.set("spring") // spring codegen 을 명시
    inputSpec.set("$projectDir/src/api-spec/spec/api-spec.yaml")
    outputDir.set("$projectDir/src/api-spec/.generated")
    configFile.set("$projectDir/src/api-spec/spec/config.json") // configOptions 를 통해 gradle file 에서 직접 지정할 수도 있긴 함
}

tasks.named("openApiGenerate") {
    it.dependsOn("openApiValidate")
    it.dependsOn("openApiGenernalHtmlGenerate")
}

processResources {
    dependsOn tasks.named("openApiGenerate")
}
// swagger ui routing
tasks.register('openApiGenernalHtmlGenerate', GenerateTask) {
    inputSpec.set("$projectDir/src/api-spec/spec/api-spec.yaml")
    generatorName.set("html2")
    outputDir.set("$projectDir/src/api-spec/.generated/src/main/resources/docs/html")
}

tasks.compileJava.dependsOn tasks.openApiGenerate, tasks.openApiGenernalHtmlGenerate

sourceSets.main.java.srcDir "${openApiGenerate.outputDir.get()}/src/main/java"
sourceSets.main.resources.srcDir "${openApiGenerate.outputDir.get()}/src/main/resources"
